esphome:
  name: stationmeteo
  friendly_name: station météo

esp8266:
  board: nodemcu

# Enable logging
logger:
  level: VERBOSE
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: "XXXX"

ota:
  - platform: esphome
    password: "XXX"

wifi:
  ssid: "reseau_amalah"
  password: "XXX"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${device_name}"
    password: "XXX"

web_server:
  port: 80

captive_portal:

uart:
  id: moduart
  tx_pin: GPIO1
  rx_pin: GPIO3
  baud_rate: 4800
  stop_bits: 1
  data_bits: 8
  parity: NONE

i2c:
  sda: GPIO0
  scl: GPIO2
  id: bus_a

external_components:
  - source:
      type: local
      path: ./custom_components

modbus:
  send_wait_time: 250ms
  uart_id: moduart
  id: modbus1
  flow_control_pin: GPIO5

modbus_controller:
  - id: wind_speed_meter
    address: 1
    modbus_id: modbus1
    setup_priority: -10
    command_throttle: 200ms
    update_interval: 1s
  - id: wind_direction_meter
    address: 2
    modbus_id: modbus1
    setup_priority: -10
    command_throttle: 200ms
    update_interval: 1s

sensor:
  - platform: dht
    pin: D2
    model: DHT22
    temperature:
      name: "station météo temperature"
    humidity:
      name: "station météo humidité"
    update_interval: 30s

  - platform: modbus_controller
    modbus_controller_id: wind_speed_meter
    name: "station météo vitesse vent"
    device_class: wind_speed
    register_type: read
    address: 0
    unit_of_measurement: "m/s"
    value_type: U_WORD
    accuracy_decimals: 1
    filters:
      - multiply: 0.1
      - max:
          window_size: 5
          send_every: 5
      - exponential_moving_average:
          alpha: 0.1
          send_every: 12

  - platform: modbus_controller
    modbus_controller_id: wind_direction_meter
    name: "station météo direction du vent gear"
    internal: true
    register_type: read
    address: 0
    value_type: U_WORD
    accuracy_decimals: 0
    on_value:
      - lambda: |-
          switch (int(x)) {
            case 0:
              id(wind_direction_cardinal).publish_state("N");  //North
              break;
            case 1:
              id(wind_direction_cardinal).publish_state("NE"); //North-East
              break;
            case 2:
              id(wind_direction_cardinal).publish_state("E");  //East
              break;
            case 3:
              id(wind_direction_cardinal).publish_state("SE"); //South-East
              break;
            case 4:
              id(wind_direction_cardinal).publish_state("S");  //South
              break;
            case 5:
              id(wind_direction_cardinal).publish_state("SW"); //South-West
              break;
            case 6:
              id(wind_direction_cardinal).publish_state("W");  //West
              break;
            case 7:
              id(wind_direction_cardinal).publish_state("NW"); //North-West
              break;
            default:
              id(wind_direction_cardinal).publish_state("");   //invalid
          }

  - platform: modbus_controller
    modbus_controller_id: wind_direction_meter
    name: "station météo angle direction vent"
    icon: mdi:compass-outline
    register_type: read
    address: 1
    value_type: U_WORD
    accuracy_decimals: 0
    state_class: measurement
    unit_of_measurement: "°"


text_sensor:
  - platform: template
    name: "station météo direction vent"
    id: wind_direction_cardinal
    icon: mdi:compass-rose
